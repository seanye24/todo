{"version":3,"sources":["Todo/components/TodoList.jsx","Todo/components/TodoForm.jsx","services/todo.js","Todo/index.jsx","services/login.js","Login/LoginPage.jsx","services/user.js","Login/CreateAccount.jsx","Login/index.jsx","App.jsx","index.jsx"],"names":["useStyles","makeStyles","Checkbox","padding","TextField","maxWidth","margin","TextField__input","textAlign","whiteSpace","overflow","textOverflow","height","Tooltip","fontSize","TodoList","todoList","handleTodoChange","updateTodo","deleteTodo","classes","useEffect","preventBlur","e","preventDefault","stopPropagation","preventTabbing","key","some","todo","duplicate","document","addEventListener","removeEventListener","generateTodoTooltip","format","createdDate","dueDate","className","map","id","clsx","finished","onClick","t","handleToggleTodo","title","tooltip","content","root","name","color","checked","placement","arrow","onSubmit","then","res","activeElement","blur","catch","console","log","handleSubmitTodo","value","error","onChange","target","handleEditTodo","style","width","length","InputProps","disableUnderline","input","IconButton","aria-label","handleDeleteTodo","Delete","fullWidth","KeyboardDatePicker","minWidth","KeyboardDatePicker__inputAdornment","display","TodoTextFieldForm","todoForm","addTodo","handleTodoFormChange","handleSubmit","handleEnterPressed","FormControl","type","placeholder","onKeyDown","inputProps","helperText","utils","DateFnsUtils","label","endOfDay","KeyboardButtonProps","token","getAll","a","axios","get","req","data","create","config","headers","Authorization","post","update","put","remove","delete","setToken","newToken","Todo","user","setUser","useState","setTodoList","Date","setTodoForm","todoService","todos","sortTodoList","parseDates","filter","username","fetchTodos","parseJSON","isDuplicateTodo","otherTodo","isEqual","hasDuplicateTodo","getDuplicateTodo","findIndex","prevTodoList","finishedTodoList","sort","b","compareAsc","unfinishedTodoList","todoToDelete","unsetDuplicates","nextTodoList","dupTodo","otherDupTodo","prevTodoForm","response","props","newTodo","savedTodo","resetTodoForm","Promise","resolve","reject","nextProps","nextTodoForm","otherIndex","index","Container","Grid","container","justify","Button","variant","window","localStorage","removeItem","login","credentials","LoginPage","setUsername","password","setPassword","isUsernameValid","setIsUsernameValid","isPasswordValid","setIsPasswordValid","loggedInUserJSON","getItem","JSON","parse","handleFormSubmit","loginService","setItem","stringify","errorMessage","direction","alignItems","spacing","item","md","to","textDecoration","createAccount","CreateAccount","setIsAuthenticated","usernameError","setUsernameError","userService","newUser","includes","Boolean","flexDirection","justifyContent","Login","path","theme","createMuiTheme","palette","primary","main","blueGrey","secondary","cyan","App","ThemeProvider","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ec7e8422.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport '../styles/TodoList.css';\nimport {\n  TextField,\n  IconButton,\n  Checkbox,\n  Tooltip,\n  makeStyles,\n} from '@material-ui/core/';\nimport { Delete as DeleteIcon } from '@material-ui/icons/';\nimport clsx from 'clsx';\nimport { format } from 'date-fns';\n\nconst useStyles = makeStyles({\n  Checkbox: {\n    padding: 12,\n  },\n  TextField: {\n    maxWidth: 500,\n    margin: 0,\n  },\n  TextField__input: {\n    textAlign: 'center',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    height: 50,\n    padding: 0,\n  },\n  Tooltip: {\n    fontSize: 16,\n  },\n});\n\nconst TodoList = ({ todoList, handleTodoChange, updateTodo, deleteTodo }) => {\n  const classes = useStyles();\n\n  useEffect(() => {\n    const preventBlur = (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n    };\n    const preventTabbing = (e) => {\n      if (e.key === 'Tab') {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    };\n    if (todoList.some((todo) => todo.duplicate)) {\n      document.addEventListener('mousedown', preventBlur);\n      document.addEventListener('keydown', preventTabbing);\n      return () => {\n        document.removeEventListener('mousedown', preventBlur);\n        document.removeEventListener('keydown', preventTabbing);\n      };\n    }\n  }, [todoList]);\n\n  const handleEditTodo = (e, todo) => {\n    handleTodoChange(todo.id, { content: e.target.value });\n  };\n\n  const handleToggleTodo = (e, todo) => {\n    if (!todoList.some((t) => t.duplicate)) {\n      updateTodo({ ...todo, finished: !todo.finished });\n    }\n  };\n\n  const handleSubmitTodo = (e, todo) => {\n    e.preventDefault();\n    if (!todo.duplicate) {\n      updateTodo(todo)\n        .then((res) => {\n          document.activeElement.blur();\n        })\n        .catch(console.log);\n    }\n  };\n\n  const handleDeleteTodo = (e, todo) => {\n    e.stopPropagation();\n    deleteTodo(todo);\n  };\n\n  const generateTodoTooltip = (todo) => {\n    return (\n      <>\n        <p>{`Created: ${format(todo.createdDate, 'MM/dd/yyyy')}`}</p>\n        <p>{`Due: ${format(todo.dueDate, 'MM/dd/yyyy')}`}</p>\n      </>\n    );\n  };\n\n  return (\n    <ul className=\"TodoList\">\n      {todoList.map((todo) => (\n        <li\n          key={todo.id}\n          className={clsx(\n            'TodoList__li',\n            todo.finished && 'TodoList__li--finished'\n          )}\n          onClick={(e) => handleToggleTodo(e, todo)}\n        >\n          <Tooltip title=\"Complete\" classes={{ tooltip: classes.Tooltip }}>\n            <Checkbox\n              id={todo.content}\n              classes={{ root: classes.Checkbox }}\n              name=\"todo\"\n              color=\"secondary\"\n              checked={todo.finished}\n            />\n          </Tooltip>\n\n          <Tooltip\n            key={todo.id}\n            title={generateTodoTooltip(todo)}\n            placement=\"right\"\n            classes={{ tooltip: classes.Tooltip }}\n            arrow\n          >\n            <form\n              className=\"TodoList__li__form\"\n              onSubmit={(e) => handleSubmitTodo(e, todo)}\n            >\n              <TextField\n                classes={{ root: classes.TextField }}\n                value={todo.content}\n                error={todo.duplicate}\n                onChange={(e) => handleEditTodo(e, todo)}\n                onClick={(e) => e.stopPropagation()}\n                style={{\n                  width: `${todo.content.length + 5}ch`,\n                }}\n                InputProps={{\n                  disableUnderline: !todo.duplicate,\n                  classes: {\n                    input: classes.TextField__input,\n                  },\n                }}\n              />\n            </form>\n          </Tooltip>\n          <Tooltip title=\"Delete\" classes={{ tooltip: classes.Tooltip }}>\n            <IconButton\n              color=\"primary\"\n              aria-label=\"delete\"\n              onClick={(e) => handleDeleteTodo(e, todo)}\n            >\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default TodoList;\n","import React from 'react';\nimport '../styles/TodoForm.css';\n\nimport { TextField, FormControl } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { endOfDay } from 'date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nconst useStyles = makeStyles({\n  TextField: {\n    width: 'calc(100vw - 136px)',\n    maxWidth: '500px',\n  },\n  TextField__input: {\n    textAlign: 'center',\n    fullWidth: true,\n  },\n  KeyboardDatePicker: {\n    width: 'calc((100vw - 136px) / 2)',\n    maxWidth: '250px',\n    minWidth: 150,\n  },\n  KeyboardDatePicker__inputAdornment: {\n    display: 'none',\n  },\n});\n\nconst TodoTextFieldForm = ({ todoForm, addTodo, handleTodoFormChange }) => {\n  const classes = useStyles();\n\n  const handleSubmit = (content, dueDate, error) => {\n    if (content.length > 0 && !error) {\n      addTodo({ content, dueDate });\n    }\n  };\n\n  const handleInputChange = (e) => {\n    handleTodoFormChange({ content: e.target.value });\n  };\n\n  const handleDueDateChange = (e) => {\n    handleTodoFormChange({ dueDate: endOfDay(e) });\n  };\n\n  const handleEnterPressed = (e) => {\n    if (e.key === 'Enter') {\n      handleSubmit(todoForm.content, todoForm.dueDate, todoForm.error);\n    }\n  };\n\n  return (\n    <form className=\"TodoInputForm\" onSubmit={handleSubmit}>\n      <FormControl error={todoForm.error}>\n        <TextField\n          classes={{ root: classes.TextField }}\n          margin=\"normal\"\n          type=\"text\"\n          name=\"todoTextField\"\n          placeholder=\"Enter Todo...\"\n          value={todoForm.content}\n          onChange={handleInputChange}\n          onKeyDown={handleEnterPressed}\n          InputProps={{ classes: { input: classes.TextField__input } }}\n          inputProps={{ className: 'TodoForm__input' }}\n          error={todoForm.error}\n          helperText={todoForm.error && 'Duplicate todo'}\n        />\n      </FormControl>\n      <FormControl error={todoForm.error}>\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <KeyboardDatePicker\n            margin=\"normal\"\n            label=\"Due Date\"\n            format=\"MM/dd/yy\"\n            value={todoForm.dueDate}\n            error={todoForm.error}\n            onChange={handleDueDateChange}\n            onKeyDown={handleEnterPressed}\n            classes={{ root: classes.KeyboardDatePicker }}\n            KeyboardButtonProps={{\n              'aria-label': 'change date',\n            }}\n            inputProps={{ className: 'TodoForm__input' }}\n          />\n        </MuiPickersUtilsProvider>\n      </FormControl>\n    </form>\n  );\n};\n\nexport default TodoTextFieldForm;\n","import axios from 'axios';\n\nconst baseUrl = '/api/todos';\n\nlet token = null;\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`;\n};\n\nconst getAll = async () => {\n  const req = await axios.get(baseUrl);\n  return req.data;\n};\n\nconst create = async (todo) => {\n  const config = { headers: { Authorization: token } };\n  const res = await axios.post(baseUrl, todo, config);\n  return res.data;\n};\n\nconst update = async (todo) => {\n  const config = { headers: { Authorization: token } };\n  const res = await axios.put(`${baseUrl}/${todo.id}`, todo, config);\n  return res.data;\n};\n\nconst remove = async (todo) => {\n  const res = await axios.delete(`${baseUrl}/${todo.id}`);\n  return res.data;\n};\n\nexport default { getAll, create, update, remove, setToken };\n","import React, { useState, useEffect } from 'react';\nimport { endOfDay, isEqual, compareAsc, parseJSON } from 'date-fns';\nimport { Container, Grid, Button } from '@material-ui/core';\n\nimport TodoList from './components/TodoList';\nimport TodoForm from './components/TodoForm';\nimport './styles/index.css';\nimport todoService from '../services/todo';\n\nconst Todo = ({ user, setUser }) => {\n  const [todoList, setTodoList] = useState([]);\n  const [todoForm, setTodoForm] = useState({\n    content: '',\n    dueDate: endOfDay(new Date()),\n    error: false,\n  });\n\n  // initially fetch todos\n  useEffect(() => {\n    const fetchTodos = async () => {\n      const todos = await todoService.getAll();\n      setTodoList(\n        sortTodoList(\n          parseDates(todos.filter((t) => t.user.username === user.username))\n        )\n      );\n    };\n    if (user) {\n      fetchTodos();\n    }\n  }, [user]);\n\n  // deserialize dates\n  const parseDates = (todos) => {\n    return todos.map((todo) => ({\n      ...todo,\n      dueDate: parseJSON(todo.dueDate),\n      createdDate: parseJSON(todo.createdDate),\n    }));\n  };\n\n  // check if a todo is a duplicate of another\n  const isDuplicateTodo = (todo, otherTodo) => {\n    return (\n      todo.id !== otherTodo.id &&\n      todo.content === otherTodo.content &&\n      isEqual(todo.dueDate, otherTodo.dueDate)\n    );\n  };\n\n  // checks for existing duplicate todos\n  const hasDuplicateTodo = (todo) => {\n    return todoList.some((otherTodo) => isDuplicateTodo(todo, otherTodo));\n  };\n\n  // mark an existing todo as a duplicate\n  const getDuplicateTodo = (todo) => {\n    return todoList.findIndex((otherTodo) => isDuplicateTodo(todo, otherTodo));\n  };\n\n  // sort todoList by finished and dueDate\n  const sortTodoList = (prevTodoList) => {\n    const finishedTodoList = prevTodoList\n      .filter((todo) => todo.finished)\n      .sort(\n        (a, b) =>\n          compareAsc(a.dueDate, b.dueDate) ||\n          compareAsc(a.createdDate, b.createdDate)\n      );\n    const unfinishedTodoList = prevTodoList\n      .filter((todo) => !todo.finished)\n      .sort(\n        (a, b) =>\n          compareAsc(a.dueDate, b.dueDate) ||\n          compareAsc(a.createdDate, b.createdDate)\n      );\n    return [...finishedTodoList, ...unfinishedTodoList];\n  };\n\n  // mark duplicate todos\n  const markDuplicateTodos = () => {\n    setTodoList((prevTodoList) => {\n      const nextTodoList = [...prevTodoList];\n      const dupTodo = nextTodoList.findIndex(\n        (todo) =>\n          isDuplicateTodo(todo, { ...todoForm, id: -1 }) ||\n          nextTodoList.some((otherTodo) => isDuplicateTodo(todo, otherTodo))\n      );\n      if (dupTodo !== -1) {\n        const otherDupTodo = nextTodoList.findIndex((todo) =>\n          isDuplicateTodo(todo, nextTodoList[dupTodo])\n        );\n        nextTodoList[dupTodo].duplicate = true;\n        if (otherDupTodo === -1) {\n          setTodoForm((prevTodoForm) => ({ ...prevTodoForm, error: true }));\n        } else {\n          nextTodoList[otherDupTodo].duplicate = true;\n        }\n      }\n      return nextTodoList;\n    });\n  };\n\n  // remove todo from list\n  const deleteTodo = async (todoToDelete) => {\n    try {\n      await todoService.remove(todoToDelete);\n      unsetDuplicates();\n      setTodoList((prevTodoList) =>\n        prevTodoList.filter((todo) => todo.id !== todoToDelete.id)\n      );\n      markDuplicateTodos();\n    } catch (error) {\n      setUser(null);\n      console.error(error.response);\n    }\n  };\n\n  // add new todo from form content\n  const addTodo = async (props) => {\n    const newTodo = {\n      ...props,\n      finished: false,\n    };\n\n    try {\n      const savedTodo = await todoService.create(newTodo);\n      setTodoList((prevTodoList) =>\n        sortTodoList(parseDates([...prevTodoList, savedTodo]))\n      );\n      resetTodoForm();\n    } catch (error) {\n      console.error(error.response);\n      setUser(null);\n    }\n  };\n\n  // update existing todo\n  const updateTodo = async (newTodo) => {\n    try {\n      const savedTodo = await todoService.update(newTodo);\n      setTodoList((prevTodoList) => {\n        const nextTodoList = prevTodoList.map((t) =>\n          t.id === savedTodo.id ? savedTodo : t\n        );\n        return sortTodoList(parseDates(nextTodoList));\n      });\n      return Promise.resolve('success');\n    } catch (error) {\n      console.error(error.response);\n      setUser(null);\n      return Promise.reject(error);\n    }\n  };\n\n  // set all todos as non duplicates\n  const unsetDuplicates = () => {\n    setTodoList((prevTodoList) =>\n      prevTodoList.map((t) => ({ ...t, duplicate: false }))\n    );\n    setTodoForm((prevTodoForm) => ({\n      ...prevTodoForm,\n      error: false,\n    }));\n  };\n\n  // handle todo change\n  const handleTodoChange = (id, nextProps) => {\n    unsetDuplicates();\n    setTodoList((prevTodoList) => {\n      const nextTodoList = [...prevTodoList];\n      const index = nextTodoList.findIndex((t) => t.id === id);\n      const todo = { ...nextTodoList[index], ...nextProps };\n      nextTodoList[index] = { ...todo };\n      if (hasDuplicateTodo(todo)) {\n        const otherIndex = getDuplicateTodo(todo);\n        nextTodoList[otherIndex].duplicate = true;\n        nextTodoList[index].duplicate = true;\n      }\n      return nextTodoList;\n    });\n  };\n\n  // handle form change\n  const handleTodoFormChange = async (nextProps) => {\n    unsetDuplicates();\n    let todo;\n    await setTodoForm((prevTodoForm) => {\n      let nextTodoForm = { ...prevTodoForm, ...nextProps };\n      todo = { ...nextTodoForm, id: -1 };\n      if (hasDuplicateTodo(todo)) {\n        nextTodoForm = { ...nextTodoForm, error: true };\n      }\n      return nextTodoForm;\n    });\n    if (hasDuplicateTodo(todo)) {\n      const otherIndex = getDuplicateTodo(todo);\n      setTodoList((prevTodoList) =>\n        prevTodoList.map((t, index) =>\n          index === otherIndex ? { ...t, duplicate: true } : t\n        )\n      );\n    }\n  };\n\n  const resetTodoForm = () => {\n    setTodoForm({\n      content: '',\n      dueDate: endOfDay(new Date()),\n      error: false,\n    });\n  };\n\n  return (\n    <div className=\"Todo\">\n      <Container>\n        <TodoList\n          todoList={todoList}\n          handleTodoChange={handleTodoChange}\n          updateTodo={updateTodo}\n          deleteTodo={deleteTodo}\n        />\n        <TodoForm\n          addTodo={addTodo}\n          todoForm={todoForm}\n          handleTodoFormChange={handleTodoFormChange}\n        />\n        <Grid container justify=\"center\">\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => {\n              window.localStorage.removeItem('loggedInTodoAppUser');\n              setUser(null);\n            }}\n          >\n            Log Out\n          </Button>\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n\nexport default Todo;\n","import axios from 'axios';\n\nconst baseUrl = '/api/login';\n\nconst login = async (credentials) => {\n  try {\n    const res = await axios.post(baseUrl, credentials);\n    return res.data;\n  } catch (error) {\n    return Promise.reject(error.response);\n  }\n};\n\nexport default { login };\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { TextField, Button, Grid } from '@material-ui/core';\nimport loginService from '../services/login';\nimport todoService from '../services/todo';\n\nconst LoginPage = ({ setUser }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isUsernameValid, setIsUsernameValid] = useState(true);\n  const [isPasswordValid, setIsPasswordValid] = useState(true);\n\n  useEffect(() => {\n    const loggedInUserJSON = window.localStorage.getItem('loggedInTodoAppUser');\n    if (loggedInUserJSON) {\n      const user = JSON.parse(loggedInUserJSON);\n      setUser(user);\n      todoService.setToken(user.token);\n    }\n  }, [setUser]);\n\n  const handleUsernameChange = (e) => {\n    setUsername(e.target.value);\n  };\n\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const handleFormSubmit = async (e) => {\n    e.preventDefault();\n    setIsUsernameValid(true);\n    setIsPasswordValid(true);\n    try {\n      const user = await loginService.login({ username, password });\n      window.localStorage.setItem('loggedInTodoAppUser', JSON.stringify(user));\n      todoService.setToken(user.token);\n      setUsername('');\n      setPassword('');\n      setUser({ username });\n    } catch (error) {\n      const errorMessage = error.data.error;\n      if (errorMessage === 'invalid username') {\n        setIsUsernameValid(false);\n      } else if (errorMessage === 'invalid password') {\n        setIsPasswordValid(false);\n      }\n    }\n  };\n  return (\n    <form onSubmit={handleFormSubmit}>\n      <Grid\n        container\n        direction=\"column\"\n        alignItems=\"center\"\n        justify=\"center\"\n        spacing={8}\n      >\n        <Grid\n          container\n          item\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n          spacing={1}\n        >\n          <Grid md item>\n            <TextField\n              error={!isUsernameValid}\n              helperText={!isUsernameValid && 'Invalid Username'}\n              label=\"Username\"\n              value={username}\n              onChange={handleUsernameChange}\n            />\n          </Grid>\n          <Grid md item>\n            <TextField\n              error={!isPasswordValid}\n              helperText={!isPasswordValid && 'Invalid Password'}\n              type=\"password\"\n              label=\"Password\"\n              value={password}\n              onChange={handlePasswordChange}\n            />\n          </Grid>\n        </Grid>\n        <Grid\n          container\n          item\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n          spacing={2}\n        >\n          <Grid md item>\n            <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\n              Login\n            </Button>\n          </Grid>\n          <Grid md item>\n            <Link to=\"/create-account\" style={{ textDecoration: 'none' }}>\n              <Button variant=\"text\" color=\"primary\">\n                Create Account\n              </Button>\n            </Link>\n          </Grid>\n        </Grid>\n      </Grid>\n    </form>\n  );\n};\n\nexport default LoginPage;\n","import axios from 'axios';\n\nconst baseUrl = '/api/users';\n\nconst createAccount = async (credentials) => {\n  try {\n    const res = await axios.post(baseUrl, credentials);\n    return res.data;\n  } catch (error) {\n    return Promise.reject(error.response);\n  }\n};\n\nexport default { createAccount };\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { TextField, Button, Grid } from '@material-ui/core';\n\nimport userService from '../services/user';\n\nconst CreateAccount = ({ setIsAuthenticated }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [usernameError, setUsernameError] = useState(null);\n\n  const handleUsernameChange = (e) => {\n    setUsername(e.target.value);\n  };\n\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const handleFormSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const newUser = await userService.createAccount({ username, password });\n      console.log('user', newUser, 'created!');\n      setUsername('');\n      setPassword('');\n    } catch (error) {\n      const errorMessage = error.data.error;\n      if (errorMessage) {\n        if (errorMessage.includes(`expected \\`username\\` to be unique`)) {\n          setUsernameError('Username taken');\n        } else if (errorMessage.includes(`Path \\`username\\` is required`)) {\n          setUsernameError('Username required');\n        }\n      }\n      console.error(error);\n    }\n  };\n  return (\n    <form onSubmit={handleFormSubmit}>\n      <Grid\n        container\n        direction=\"column\"\n        alignItems=\"center\"\n        justify=\"center\"\n        spacing={3}\n      >\n        <Grid md item>\n          <TextField\n            error={Boolean(usernameError)}\n            label={usernameError || 'Username'}\n            value={username}\n            onChange={handleUsernameChange}\n          />\n        </Grid>\n        <Grid md item>\n          <TextField\n            type=\"password\"\n            label=\"Password\"\n            value={password}\n            onChange={handlePasswordChange}\n          />\n        </Grid>\n        <Grid md item>\n          <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\n            Create Account\n          </Button>\n        </Grid>\n        <Grid md item>\n          <Link to=\"/login\" style={{ textDecoration: 'none' }}>\n            <Button variant=\"text\" color=\"primary\">\n              Login\n            </Button>\n          </Link>\n        </Grid>\n      </Grid>\n    </form>\n  );\n};\n\nexport default CreateAccount;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Container, makeStyles } from '@material-ui/core';\nimport LoginPage from './LoginPage';\nimport CreateAccount from './CreateAccount';\n\nconst useStyles = makeStyles({\n  root: {\n    height: 'calc(100vh - 16px)',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n});\n\nconst Login = ({ setUser }) => {\n  const classes = useStyles();\n  return (\n    <Container maxWidth=\"sm\" classes={{ root: classes.root }}>\n      <Router>\n        <Switch>\n          <Route path=\"/login\">\n            <LoginPage setUser={setUser}\n            />\n          </Route>\n          <Route path=\"/create-account\">\n            <CreateAccount />\n          </Route>\n        </Switch>\n      </Router>\n    </Container>\n  );\n};\n\nexport default Login;\n","import React, { useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { blueGrey, cyan } from '@material-ui/core/colors/';\nimport Todo from './Todo';\nimport Login from './Login';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: blueGrey[300],\n    },\n    secondary: {\n      main: cyan[300],\n    },\n  },\n});\n\nconst App = () => {\n  const [user, setUser] = useState(null);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <Redirect to={!user ? '/login' : '/todos'} />\n        <Switch>\n          <Route path=\"/login\">\n            <Login setUser={setUser} />\n          </Route>\n          <Route path=\"/todos\">\n            <Todo user={user} setUser={setUser} />\n          </Route>\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}